rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the authenticated user's ID matches the document's userId
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Usernames: Publicly readable. Can only be created by the user it points to.
    match /usernames/{username} {
      allow read;
      // Allow create only if the user is creating their own username mapping.
      // `request.resource.data.userId` is the userId being written in the new document.
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      // Prevent usernames from being updated or deleted for simplicity.
      allow update, delete: if false;
    }

    // User Profiles: Publicly readable. Writable only by the owner.
    match /users/{userId} {
      allow read;
       // Allow write (create, update, delete) only if the user is the owner.
      allow write: if isSignedIn() && isOwner(userId);
    }

    // Portfolios: Publicly readable. Writable only by the owner.
    match /portfolios/{portfolioId} {
      allow read;
      // The user creating/updating the portfolio must be the owner.
      allow write: if isSignedIn() && isOwner(request.resource.data.userId);
    }

    // Projects: Publicly readable. Writable only by the owner.
    match /projects/{projectId} {
      allow read;
       // The user creating/updating the project must be the owner.
      allow write: if isSignedIn() && isOwner(request.resource.data.userId);
    }
  }
}
